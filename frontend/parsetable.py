
# parsetable.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARRAY ASSIGNMENT BINDIGSEQ CASE CHAR COLON COMMA COMMENT CONST DIGSEQ DIV DO DOT DOTDOT DOWNTO ELSE END EQUAL FOR FORWARD FUNCTION GE GOTO GT HEXDIGSEQ IDENTIFIER IF IN LABEL LBRAC LE LPAREN LT MINUS MOD NIL NOT NOTEQUAL OCTDIGSEQ OF OR OTHERWISE PACKED PBEGIN PFILE PLUS PROCEDURE PROGRAM RBRAC REALNUMBER RECORD REPEAT RPAREN SEMICOLON SET SLASH STAR STARSTAR STRING THEN TO TYPE UNTIL UPARROW UNPACKED VAR WHILE WITHfile : program\n    program : PROGRAM identifier LPAREN identifier_list RPAREN semicolon block DOT\n    program : PROGRAM identifier semicolon block DOTidentifier_list : identifier_list comma identifieridentifier_list : identifierblock : label_declaration_part constant_definition_part type_definition_part variable_declaration_part procedure_and_function_declaration_part statement_partlabel_declaration_part : LABEL label_list semicolonlabel_declaration_part : emptylabel_list : label_list comma labellabel_list : labellabel : DIGSEQconstant_definition_part : CONST constant_listconstant_definition_part : emptyconstant_list : constant_list constant_definitionconstant_list : constant_definitionconstant_definition : identifier EQUAL cexpression semicoloncexpression : csimple_expressioncexpression : csimple_expression relop csimple_expressioncsimple_expression : ctermcsimple_expression : csimple_expression addop ctermcterm : cfactorcterm : cterm mulop cfactorcfactor : sign cfactorcfactor : cprimarycprimary : identifiercprimary : LPAREN cexpression RPARENcprimary : unsigned_constantcprimary : NOT cprimaryconstant : non_stringconstant : sign non_stringconstant : STRINGconstant : CHARsign : PLUSsign : MINUSnon_string : DIGSEQnon_string : identifiernon_string : REALNUMBERtype_definition_part : TYPE type_definition_listtype_definition_part : emptytype_definition_list : type_definition_list type_definitiontype_definition_list : type_definitiontype_definition : identifier EQUAL type_denoter semicolontype_denoter : identifiertype_denoter : new_typenew_type : new_ordinal_typenew_type : new_structured_typenew_type : new_pointer_typenew_ordinal_type : enumerated_typenew_ordinal_type : subrange_typeenumerated_type : LPAREN identifier_list RPARENsubrange_type : constant DOTDOT constantnew_structured_type : structured_typenew_structured_type : PACKED structured_typestructured_type : array_typestructured_type : record_typestructured_type : set_typestructured_type : file_typearray_type : ARRAY LBRAC index_list RBRAC OF component_typeindex_list : index_list comma index_typeindex_list : index_typeindex_type : ordinal_typeordinal_type : new_ordinal_typeordinal_type : identifiercomponent_type : type_denoterrecord_type : RECORD record_section_list ENDrecord_type : RECORD record_section_list semicolon variant_part ENDrecord_type : RECORD variant_part ENDrecord_section_list : record_section_list semicolon record_sectionrecord_section_list : record_sectionrecord_section : identifier_list COLON type_denotervariant_selector : tag_field COLON tag_typevariant_selector : tag_typevariant_list : variant_list semicolon variantvariant_list : variantvariant : case_constant_list COLON LPAREN record_section_list RPARENvariant : case_constant_list COLON LPAREN record_section_list semicolon variant_part RPARENvariant : case_constant_list COLON LPAREN variant_part RPARENvariant_part : CASE variant_selector OF variant_listvariant_part : CASE variant_selector OF variant_list semicolonvariant_part : emptycase_constant_list : case_constant_list comma case_constantcase_constant_list : case_constantcase_constant : constantcase_constant : constant DOTDOT constanttag_field : identifiertag_type : identifierset_type : SET OF base_typebase_type : ordinal_typefile_type : PFILE OF component_typenew_pointer_type : UPARROW domain_typedomain_type : identifiervariable_declaration_part : VAR variable_declaration_list semicolonvariable_declaration_part : emptyvariable_declaration_list : variable_declaration_list semicolon variable_declarationvariable_declaration_list : variable_declarationvariable_declaration : identifier_list COLON type_denoterprocedure_and_function_declaration_part : proc_or_func_declaration_list semicolonprocedure_and_function_declaration_part : emptyproc_or_func_declaration_list : proc_or_func_declaration_list semicolon proc_or_func_declarationproc_or_func_declaration_list : proc_or_func_declarationproc_or_func_declaration : procedure_declarationproc_or_func_declaration : function_declarationprocedure_declaration : procedure_heading semicolon procedure_blockprocedure_heading : procedure_identificationprocedure_heading : procedure_identification formal_parameter_listformal_parameter_list : LPAREN formal_parameter_section_list RPARENformal_parameter_section_list : formal_parameter_section_list semicolon formal_parameter_sectionformal_parameter_section_list : formal_parameter_sectionformal_parameter_section : value_parameter_specificationformal_parameter_section : variable_parameter_specificationformal_parameter_section : procedural_parameter_specificationformal_parameter_section : functional_parameter_specificationvalue_parameter_specification : identifier_list COLON identifier\n    variable_parameter_specification : VAR identifier_list COLON identifier\n    procedural_parameter_specification : procedure_headingfunctional_parameter_specification : function_headingprocedure_identification : PROCEDURE identifierprocedure_block : block\n    function_declaration : function_identification semicolon function_block\n    function_declaration : function_heading semicolon function_blockfunction_heading : FUNCTION identifier COLON result_typefunction_heading : FUNCTION identifier formal_parameter_list COLON result_typeresult_type : identifierfunction_identification : FUNCTION identifierfunction_block : blockstatement_part : compound_statementcompound_statement : PBEGIN statement_sequence ENDstatement_sequence : statement_sequence semicolon statementstatement_sequence : statementstatement : open_statementstatement : closed_statementopen_statement : label COLON non_labeled_open_statementopen_statement : non_labeled_open_statementclosed_statement : label COLON non_labeled_closed_statementclosed_statement : non_labeled_closed_statementnon_labeled_open_statement : open_with_statementnon_labeled_open_statement : open_if_statementnon_labeled_open_statement : open_while_statementnon_labeled_open_statement : open_for_statement\n    non_labeled_closed_statement : assignment_statement\n    | procedure_statement\n    | goto_statement\n    | compound_statement\n    | case_statement\n    | repeat_statement\n    | closed_with_statement\n    | closed_if_statement\n    | closed_while_statement\n    | closed_for_statement\n    | empty\n    repeat_statement : REPEAT statement_sequence UNTIL boolean_expressionopen_while_statement : WHILE boolean_expression DO open_statementclosed_while_statement : WHILE boolean_expression DO closed_statementopen_for_statement : FOR control_variable ASSIGNMENT initial_value direction final_value DO open_statementclosed_for_statement : FOR control_variable ASSIGNMENT initial_value direction final_value DO closed_statementopen_with_statement : WITH record_variable_list DO open_statementclosed_with_statement : WITH record_variable_list DO closed_statementopen_if_statement : IF boolean_expression THEN statementopen_if_statement : IF boolean_expression THEN closed_statement ELSE open_statementclosed_if_statement : IF boolean_expression THEN closed_statement ELSE closed_statementassignment_statement : variable_access ASSIGNMENT expressionvariable_access : identifiervariable_access : indexed_variablevariable_access : field_designatorvariable_access : variable_access UPARROWindexed_variable : variable_access LBRAC index_expression_list RBRACindex_expression_list : index_expression_list comma index_expressionindex_expression_list : index_expressionindex_expression : expressionfield_designator : variable_access DOT identifierprocedure_statement : identifier paramsprocedure_statement : identifierparams : LPAREN actual_parameter_list RPARENactual_parameter_list : actual_parameter_list comma actual_parameteractual_parameter_list : actual_parameteractual_parameter : expressionactual_parameter : expression COLON expressionactual_parameter : expression COLON expression COLON expressiongoto_statement : GOTO labelcase_statement : CASE case_index OF case_list_element_list END\n    case_statement : CASE case_index OF case_list_element_list SEMICOLON END\n    case_statement : CASE case_index OF case_list_element_list semicolon otherwisepart statement ENDcase_statement : CASE case_index OF case_list_element_list semicolon otherwisepart statement SEMICOLON ENDcase_index : expression\n    case_list_element_list : case_list_element_list semicolon case_list_element\n    case_list_element_list : case_list_elementcase_list_element : case_constant_list COLON statementotherwisepart : OTHERWISEotherwisepart : OTHERWISE COLONcontrol_variable : identifierinitial_value : expressiondirection : TOdirection : DOWNTOfinal_value : expressionrecord_variable_list : record_variable_list comma variable_accessrecord_variable_list : variable_accessboolean_expression : expressionexpression : simple_expressionexpression : simple_expression relop simple_expressionsimple_expression : termsimple_expression : simple_expression addop termterm : factorterm : term mulop factorfactor : sign factorfactor : primaryprimary : variable_accessprimary : unsigned_constantprimary : function_designatorprimary : set_constructorprimary : LPAREN expression RPARENprimary : NOT primaryunsigned_constant : unsigned_numberunsigned_constant : STRINGunsigned_constant : NILunsigned_constant : CHARunsigned_number : unsigned_integerunsigned_number : unsigned_realunsigned_integer : DIGSEQunsigned_integer : HEXDIGSEQunsigned_integer : OCTDIGSEQunsigned_integer : BINDIGSEQunsigned_real : REALNUMBERfunction_designator : identifier paramsset_constructor : LBRAC member_designator_list RBRACset_constructor : LBRAC RBRAC\n    member_designator_list : member_designator_list comma member_designator\n    member_designator_list : member_designatormember_designator : member_designator DOTDOT expressionmember_designator : expressionaddop : PLUSaddop : MINUSaddop : ORmulop : STARmulop : SLASHmulop : DIVmulop : MODmulop : ANDrelop : EQUALrelop : NOTEQUALrelop : LTrelop : GTrelop : LErelop : GErelop : INidentifier : IDENTIFIERsemicolon : SEMICOLONcomma : COMMAempty : '
    
_lr_action_items = {'OTHERWISE':([370,371,],[390,-246,]),'NOTEQUAL':([5,62,63,65,66,68,69,70,72,73,74,75,77,78,79,80,81,83,132,146,189,192,219,220,222,230,231,233,234,235,236,239,241,243,247,288,292,298,299,304,326,327,328,331,334,354,],[-245,-19,-222,-215,-217,-212,-219,136,-213,-24,-27,-21,-220,-218,-214,-221,-216,-25,-23,-28,-164,-163,-22,-20,-26,-205,-208,-206,-202,136,-207,-200,-209,-162,-165,-204,-225,-211,-223,-170,-201,-210,-224,-203,-166,-173,]),'STAR':([5,62,63,65,66,68,69,72,73,74,75,77,78,79,80,81,83,132,146,189,192,219,220,222,230,231,233,234,236,239,241,243,247,288,292,298,299,304,326,327,328,331,334,354,],[-245,127,-222,-215,-217,-212,-219,-213,-24,-27,-21,-220,-218,-214,-221,-216,-25,-23,-28,-164,-163,-22,127,-26,-205,-208,-206,-202,-207,127,-209,-162,-165,-204,-225,-211,-223,-170,127,-210,-224,-203,-166,-173,]),'SLASH':([5,62,63,65,66,68,69,72,73,74,75,77,78,79,80,81,83,132,146,189,192,219,220,222,230,231,233,234,236,239,241,243,247,288,292,298,299,304,326,327,328,331,334,354,],[-245,129,-222,-215,-217,-212,-219,-213,-24,-27,-21,-220,-218,-214,-221,-216,-25,-23,-28,-164,-163,-22,129,-26,-205,-208,-206,-202,-207,129,-209,-162,-165,-204,-225,-211,-223,-170,129,-210,-224,-203,-166,-173,]),'DO':([5,63,65,66,68,69,72,77,78,79,80,81,189,192,230,231,233,234,235,236,239,240,241,243,244,247,249,250,251,288,292,298,299,304,325,326,327,328,331,334,338,354,377,380,395,396,424,],[-245,-222,-215,-217,-212,-219,-213,-220,-218,-214,-221,-216,-164,-163,-205,-208,-206,-202,-198,-207,-200,297,-209,-162,-197,-165,305,-196,-162,-204,-225,-211,-223,-170,-199,-201,-210,-224,-203,-166,-195,-173,397,401,408,-194,426,]),'ASSIGNMENT':([5,164,187,189,192,247,254,255,304,334,379,],[-245,246,-162,-164,-163,-165,308,-190,-170,-166,400,]),'THEN':([5,63,65,66,68,69,72,77,78,79,80,81,189,192,230,231,233,234,235,236,239,241,243,244,247,259,288,292,298,299,304,325,326,327,328,331,334,354,382,],[-245,-222,-215,-217,-212,-219,-213,-220,-218,-214,-221,-216,-164,-163,-205,-208,-206,-202,-198,-207,-200,-209,-162,-197,-165,312,-204,-225,-211,-223,-170,-199,-201,-210,-224,-203,-166,-173,402,]),'EQUAL':([5,30,40,62,63,65,66,68,69,70,72,73,74,75,77,78,79,80,81,83,132,146,189,192,219,220,222,230,231,233,234,235,236,239,241,243,247,288,292,298,299,304,326,327,328,331,334,354,],[-245,42,61,-19,-222,-215,-217,-212,-219,138,-213,-24,-27,-21,-220,-218,-214,-221,-216,-25,-23,-28,-164,-163,-22,-20,-26,-205,-208,-206,-202,138,-207,-200,-209,-162,-165,-204,-225,-211,-223,-170,-201,-210,-224,-203,-166,-173,]),'GOTO':([6,91,178,229,256,297,305,312,372,378,381,389,390,397,401,402,407,408,419,426,],[-246,179,179,179,179,179,179,179,179,179,179,179,-188,179,179,179,-189,179,179,179,]),'LABEL':([6,7,33,93,95,96,],[-246,11,11,11,11,11,]),'CHAR':([6,24,42,61,64,67,71,76,82,98,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,162,168,186,202,206,213,218,232,237,238,242,245,246,261,277,289,290,296,307,308,311,317,323,329,330,335,347,353,355,356,363,368,370,371,373,374,375,376,386,400,403,418,],[-246,-247,65,120,65,-34,-33,65,65,120,-237,-233,65,-234,-235,-236,65,-241,65,-239,-243,-238,-232,-240,-242,-230,-244,-231,65,65,65,120,120,120,120,65,65,65,65,65,65,65,120,65,65,65,120,65,65,120,120,65,65,65,65,65,65,65,120,120,120,-246,120,65,-193,-192,120,65,65,65,]),'PBEGIN':([6,7,9,10,15,17,25,27,28,29,31,33,35,37,38,39,41,47,49,60,86,91,93,95,96,97,147,178,214,229,256,297,305,312,372,378,381,389,390,397,401,402,407,408,419,426,],[-246,-248,-8,-248,-248,-13,-248,-39,-12,-15,-7,-248,-248,-93,-41,-38,-14,91,-98,-40,-97,91,-248,-248,-248,-92,-16,91,-42,91,91,91,91,91,91,91,91,91,-188,91,91,91,-189,91,91,91,]),'WHILE':([6,91,178,229,256,297,305,312,372,378,381,389,390,397,401,402,407,408,419,426,],[-246,162,162,162,162,162,162,347,162,162,347,162,-188,347,347,347,-189,162,347,347,]),'PROGRAM':([0,],[3,]),'REPEAT':([6,91,178,229,256,297,305,312,372,378,381,389,390,397,401,402,407,408,419,426,],[-246,178,178,178,178,178,178,178,178,178,178,178,-188,178,178,178,-189,178,178,178,]),'CONST':([6,7,9,10,31,33,93,95,96,],[-246,-248,-8,16,-7,-248,-248,-248,-248,]),'DIV':([5,62,63,65,66,68,69,72,73,74,75,77,78,79,80,81,83,132,146,189,192,219,220,222,230,231,233,234,236,239,241,243,247,288,292,298,299,304,326,327,328,331,334,354,],[-245,130,-222,-215,-217,-212,-219,-213,-24,-27,-21,-220,-218,-214,-221,-216,-25,-23,-28,-164,-163,-22,130,-26,-205,-208,-206,-202,-207,130,-209,-162,-165,-204,-225,-211,-223,-170,130,-210,-224,-203,-166,-173,]),'WITH':([6,91,178,229,256,297,305,312,372,378,381,389,390,397,401,402,407,408,419,426,],[-246,166,166,166,166,166,166,350,166,166,350,166,-188,350,350,350,-189,166,350,350,]),'MINUS':([5,6,24,42,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,98,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,162,168,186,189,192,202,206,213,218,219,220,221,222,230,231,232,233,234,235,236,237,238,239,241,243,245,246,247,261,277,288,289,290,292,296,298,299,304,307,308,311,317,323,325,326,327,328,329,330,331,334,335,347,353,354,355,356,363,368,370,371,373,374,375,376,386,400,403,418,],[-245,-246,-247,67,67,-19,-222,67,-215,-217,-34,-212,-219,144,-33,-213,-24,-27,-21,67,-220,-218,-214,-221,-216,-25,67,-237,-233,67,-234,-235,-236,-23,67,-241,67,-239,-243,-238,-232,-240,-242,-230,-244,-231,-28,67,67,67,-164,-163,67,67,67,67,-22,-20,144,-26,-205,-208,67,-206,-202,144,-207,67,67,-200,-209,-162,67,67,-165,67,67,-204,67,67,-225,67,-211,-223,-170,67,67,67,67,67,144,-201,-210,-224,67,67,-203,-166,67,67,67,-173,67,67,67,67,67,-246,67,67,-193,-192,67,67,67,67,]),'DOT':([5,12,44,89,90,164,187,189,192,228,233,243,247,250,251,304,334,338,],[-245,21,85,-6,-126,248,-162,-164,-163,-127,248,-162,-165,248,-162,-170,-166,248,]),'REALNUMBER':([6,24,42,61,64,67,71,76,82,98,102,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,162,168,186,202,206,213,218,232,237,238,242,245,246,261,277,289,290,296,307,308,311,317,323,329,330,335,347,353,355,356,363,368,370,371,373,374,375,376,386,400,403,418,],[-246,-247,63,100,63,-34,-33,63,63,100,100,-237,-233,63,-234,-235,-236,63,-241,63,-239,-243,-238,-232,-240,-242,-230,-244,-231,63,63,63,100,100,100,100,63,63,63,63,63,63,63,100,63,63,63,100,63,63,100,100,63,63,63,63,63,63,63,100,100,100,-246,100,63,-193,-192,100,63,63,63,]),'CASE':([6,91,110,178,229,256,275,297,305,312,372,378,381,389,390,397,401,402,404,407,408,419,421,426,],[-246,168,207,168,168,168,207,168,168,168,168,168,168,168,-188,168,168,168,207,-189,168,168,207,168,]),'LE':([5,62,63,65,66,68,69,70,72,73,74,75,77,78,79,80,81,83,132,146,189,192,219,220,222,230,231,233,234,235,236,239,241,243,247,288,292,298,299,304,326,327,328,331,334,354,],[-245,-19,-222,-215,-217,-212,-219,141,-213,-24,-27,-21,-220,-218,-214,-221,-216,-25,-23,-28,-164,-163,-22,-20,-26,-205,-208,-206,-202,141,-207,-200,-209,-162,-165,-204,-225,-211,-223,-170,-201,-210,-224,-203,-166,-173,]),'RPAREN':([5,6,13,14,34,46,62,63,65,66,68,69,70,72,73,74,75,77,78,79,80,81,83,87,94,100,101,103,104,105,107,109,111,114,116,117,119,120,121,122,124,125,132,145,146,149,150,152,153,156,157,158,159,189,192,203,204,205,208,212,215,216,217,219,220,221,222,224,230,231,233,234,235,236,239,241,243,247,263,264,265,266,267,268,269,274,276,281,282,283,284,286,288,291,292,298,299,304,313,314,315,316,319,321,324,325,326,327,328,331,334,354,357,359,362,383,384,386,387,404,405,411,412,413,420,421,422,425,427,],[-245,-246,-5,22,-4,-104,-19,-222,-215,-217,-212,-219,-17,-213,-24,-27,-21,-220,-218,-214,-221,-216,-25,-105,-117,-37,-57,-45,-46,-55,-31,-29,-48,-49,-56,-35,-54,-32,-52,-44,-47,-43,-23,222,-28,-109,-110,-111,224,-115,-112,-116,-108,-164,-163,-36,-30,-53,-69,-80,-90,-91,281,-22,-20,-18,-26,-106,-205,-208,-206,-202,-198,-207,-200,-209,-162,-165,-123,-121,-51,-87,-88,-62,-63,-65,-67,-50,-64,-89,-107,-113,-204,327,-225,-211,-223,-170,354,-175,-176,-122,-68,-70,-114,-199,-201,-210,-224,-203,-166,-173,-74,-78,-66,-174,-177,-79,-58,-248,-73,-178,420,422,-75,-248,-77,427,-76,]),'SEMICOLON':([4,5,6,18,19,20,22,43,45,46,48,51,53,54,55,56,57,59,62,63,65,66,68,69,70,72,73,74,75,77,78,79,80,81,83,84,87,89,90,91,92,94,100,101,103,104,105,107,109,111,113,114,116,117,119,120,121,122,124,125,132,146,148,149,150,152,153,156,157,158,159,160,161,163,165,167,170,171,172,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,192,195,196,197,198,199,200,201,203,204,205,208,209,215,216,219,220,221,222,224,228,229,230,231,233,234,235,236,239,241,243,244,247,256,257,258,260,263,264,265,266,267,268,269,274,276,281,282,283,284,286,287,288,292,297,298,299,303,304,305,309,310,312,316,319,321,324,325,326,327,328,331,332,333,334,336,337,340,342,346,348,352,354,357,359,362,369,372,378,381,387,389,390,391,392,393,397,398,399,401,402,405,406,407,408,410,412,414,416,417,419,420,422,423,426,427,],[6,-245,-246,6,-10,-11,6,-9,6,-104,-100,6,6,-102,-101,6,6,-95,-19,-222,-215,-217,-212,-219,-17,-213,-24,-27,-21,-220,-218,-214,-221,-216,-25,6,-105,-6,-126,-248,-124,-117,-37,-57,-45,-46,-55,-31,-29,-48,6,-49,-56,-35,-54,-32,-52,-44,-47,-43,-23,-28,-99,-109,-110,-111,6,-115,-112,-116,-108,-147,6,-142,-136,-131,-143,-140,-141,-129,-138,-150,-145,-248,-148,-139,-130,-144,-137,-149,-172,-146,-164,-133,-135,-163,-119,-125,-103,-118,-120,-94,-96,-36,-30,-53,-69,6,-90,-91,-22,-20,-18,-26,-106,-127,-248,-205,-208,-206,-202,-198,-207,-200,-209,-162,-197,-165,-248,6,-179,-171,-123,-121,-51,-87,-88,-62,-63,-65,-67,-50,-64,-89,-107,-113,-128,-204,-225,-248,-211,-223,-161,-170,-248,-132,-134,-248,-122,-68,-70,-114,-199,-201,-210,-224,-203,-153,-152,-166,-157,-156,-186,371,-151,-131,-158,-173,-74,6,-66,-180,-248,-248,-248,-58,-248,-188,-185,-181,-187,-248,-160,-159,-248,-248,-73,415,-189,-248,-131,6,-182,-155,-154,-248,-75,-77,-183,-248,-76,]),'RECORD':([61,98,106,218,277,363,],[110,110,110,110,110,110,]),'RBRAC':([5,63,65,66,68,69,72,77,78,79,80,81,100,107,109,111,114,117,120,189,192,203,204,230,231,233,234,235,236,238,239,241,243,247,265,268,269,278,279,280,281,288,292,293,294,295,298,299,300,301,302,304,325,326,327,328,331,334,354,364,365,366,367,],[-245,-222,-215,-217,-212,-219,-213,-220,-218,-214,-221,-216,-37,-31,-29,-48,-49,-35,-32,-164,-163,-36,-30,-205,-208,-206,-202,-198,-207,292,-200,-209,-162,-165,-51,-62,-63,-60,-61,322,-50,-204,-225,328,-227,-229,-211,-223,334,-168,-169,-170,-199,-201,-210,-224,-203,-166,-173,-59,-226,-228,-167,]),'PLUS':([5,6,24,42,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,98,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,162,168,186,189,192,202,206,213,218,219,220,221,222,230,231,232,233,234,235,236,237,238,239,241,243,245,246,247,261,277,288,289,290,292,296,298,299,304,307,308,311,317,323,325,326,327,328,329,330,331,334,335,347,353,354,355,356,363,368,370,371,373,374,375,376,386,400,403,418,],[-245,-246,-247,71,71,-19,-222,71,-215,-217,-34,-212,-219,142,-33,-213,-24,-27,-21,71,-220,-218,-214,-221,-216,-25,71,-237,-233,71,-234,-235,-236,-23,71,-241,71,-239,-243,-238,-232,-240,-242,-230,-244,-231,-28,71,71,71,-164,-163,71,71,71,71,-22,-20,142,-26,-205,-208,71,-206,-202,142,-207,71,71,-200,-209,-162,71,71,-165,71,71,-204,71,71,-225,71,-211,-223,-170,71,71,71,71,71,142,-201,-210,-224,71,71,-203,-166,71,71,71,-173,71,71,71,71,71,-246,71,71,-193,-192,71,71,71,71,]),'DOTDOT':([5,63,65,66,68,69,72,77,78,79,80,81,99,100,107,109,117,120,125,189,192,203,204,230,231,233,234,235,236,239,241,243,247,269,288,292,294,295,298,299,304,325,326,327,328,331,334,339,354,365,366,],[-245,-222,-215,-217,-212,-219,-213,-220,-218,-214,-221,-216,202,-37,-31,-29,-35,-32,-36,-164,-163,-36,-30,-205,-208,-206,-202,-198,-207,-200,-209,-162,-165,-36,-204,-225,330,-229,-211,-223,-170,-199,-201,-210,-224,-203,-166,368,-173,330,-228,]),'TO':([5,63,65,66,68,69,72,77,78,79,80,81,189,192,230,231,233,234,235,236,239,241,243,247,288,292,298,299,304,325,326,327,328,331,334,344,345,354,409,],[-245,-222,-215,-217,-212,-219,-213,-220,-218,-214,-221,-216,-164,-163,-205,-208,-206,-202,-198,-207,-200,-209,-162,-165,-204,-225,-211,-223,-170,-199,-201,-210,-224,-203,-166,376,-191,-173,376,]),'LT':([5,62,63,65,66,68,69,70,72,73,74,75,77,78,79,80,81,83,132,146,189,192,219,220,222,230,231,233,234,235,236,239,241,243,247,288,292,298,299,304,326,327,328,331,334,354,],[-245,-19,-222,-215,-217,-212,-219,140,-213,-24,-27,-21,-220,-218,-214,-221,-216,-25,-23,-28,-164,-163,-22,-20,-26,-205,-208,-206,-202,140,-207,-200,-209,-162,-165,-204,-225,-211,-223,-170,-201,-210,-224,-203,-166,-173,]),'COLON':([5,13,20,34,58,63,65,66,68,69,72,77,78,79,80,81,92,100,107,109,117,120,155,173,189,192,193,203,204,211,223,224,226,230,231,233,234,235,236,239,241,243,247,271,272,288,292,298,299,304,315,325,326,327,328,331,334,339,341,343,351,354,358,384,388,390,394,],[-245,-5,-11,-4,98,-222,-215,-217,-212,-219,-213,-220,-218,-214,-221,-216,194,-37,-31,-29,-35,-32,227,256,-164,-163,262,-36,-30,277,194,-106,285,-205,-208,-206,-202,-198,-207,-200,-209,-162,-165,-85,318,-204,-225,-211,-223,-170,356,-199,-201,-210,-224,-203,-166,-83,-82,372,381,-173,385,403,-84,407,-81,]),'PACKED':([61,98,218,277,363,],[106,106,106,106,106,]),'HEXDIGSEQ':([24,42,64,67,71,76,82,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,162,168,186,232,237,238,242,245,246,261,289,290,296,308,311,329,330,335,347,353,355,356,374,375,376,400,403,418,],[-247,69,69,-34,-33,69,69,-237,-233,69,-234,-235,-236,69,-241,69,-239,-243,-238,-232,-240,-242,-230,-244,-231,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-193,-192,69,69,69,]),'COMMA':([5,13,14,18,19,20,34,43,58,63,65,66,68,69,72,77,78,79,80,81,100,107,109,111,114,117,120,155,189,192,203,204,211,217,226,230,231,233,234,235,236,239,241,243,247,249,250,251,265,268,269,278,279,280,281,288,292,293,294,295,298,299,300,301,302,304,313,314,315,325,326,327,328,331,334,338,339,341,343,354,358,364,365,366,367,380,383,384,388,394,411,],[-245,-5,24,24,-10,-11,-4,-9,24,-222,-215,-217,-212,-219,-213,-220,-218,-214,-221,-216,-37,-31,-29,-48,-49,-35,-32,24,-164,-163,-36,-30,24,24,24,-205,-208,-206,-202,-198,-207,-200,-209,-162,-165,24,-196,-162,-51,-62,-63,-60,-61,24,-50,-204,-225,24,-227,-229,-211,-223,24,-168,-169,-170,24,-175,-176,-199,-201,-210,-224,-203,-166,-195,-83,-82,24,-173,24,-59,-226,-228,-167,24,-174,-177,-84,-81,-178,]),'ARRAY':([61,98,106,218,277,363,],[112,112,112,112,112,112,]),'IDENTIFIER':([3,6,8,16,23,24,26,28,29,36,38,39,41,42,50,52,60,61,64,67,71,76,82,88,91,97,98,102,110,115,118,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,147,151,154,162,166,168,169,178,186,194,202,206,207,213,214,218,225,227,229,232,237,238,242,245,246,248,256,261,262,275,277,285,289,290,296,297,305,306,307,308,311,312,317,318,323,329,330,335,347,349,350,353,355,356,363,368,370,371,372,373,374,375,376,378,381,386,389,390,397,400,401,402,403,404,407,408,418,419,421,426,],[5,-246,5,5,5,-247,5,5,-15,5,-41,5,-14,5,5,5,-40,5,5,-34,-33,5,5,5,5,5,5,5,5,5,5,-237,-233,5,-234,-235,-236,5,-241,5,-239,-243,-238,-232,-240,-242,-230,-244,-231,-16,5,5,5,5,5,5,5,5,5,5,5,5,5,-42,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-246,5,5,5,-193,-192,5,5,5,5,-188,5,5,5,5,5,5,-189,5,5,5,5,5,]),'$end':([1,2,21,85,],[-1,0,-3,-2,]),'FUNCTION':([6,7,9,10,15,17,25,27,28,29,31,33,35,37,38,39,41,60,86,88,93,95,96,97,147,214,225,],[-246,-248,-8,-248,-248,-13,-248,-39,-12,-15,-7,-248,50,-93,-41,-38,-14,-40,50,151,-248,-248,-248,-92,-16,-42,151,]),'GT':([5,62,63,65,66,68,69,70,72,73,74,75,77,78,79,80,81,83,132,146,189,192,219,220,222,230,231,233,234,235,236,239,241,243,247,288,292,298,299,304,326,327,328,331,334,354,],[-245,-19,-222,-215,-217,-212,-219,134,-213,-24,-27,-21,-220,-218,-214,-221,-216,-25,-23,-28,-164,-163,-22,-20,-26,-205,-208,-206,-202,134,-207,-200,-209,-162,-165,-204,-225,-211,-223,-170,-201,-210,-224,-203,-166,-173,]),'END':([5,6,20,63,65,66,68,69,72,77,78,79,80,81,91,100,101,103,104,105,107,109,110,111,114,116,117,119,120,121,122,124,125,160,161,163,165,167,170,171,172,174,175,176,177,180,181,182,183,184,185,187,188,189,190,191,192,203,204,205,208,209,210,212,215,216,228,229,230,231,233,234,235,236,239,241,243,244,247,256,258,260,265,266,267,268,269,274,275,276,281,282,283,287,288,292,297,298,299,303,304,305,309,310,312,319,320,321,325,326,327,328,331,332,333,334,336,337,340,342,346,348,352,354,357,359,362,369,371,372,378,381,386,387,389,390,391,392,393,397,398,399,401,402,405,406,407,408,410,414,415,416,417,419,420,422,423,426,427,],[-245,-246,-11,-222,-215,-217,-212,-219,-213,-220,-218,-214,-221,-216,-248,-37,-57,-45,-46,-55,-31,-29,-248,-48,-49,-56,-35,-54,-32,-52,-44,-47,-43,-147,228,-142,-136,-131,-143,-140,-141,-129,-138,-150,-145,-148,-139,-130,-144,-137,-149,-172,-146,-164,-133,-135,-163,-36,-30,-53,-69,274,276,-80,-90,-91,-127,-248,-205,-208,-206,-202,-198,-207,-200,-209,-162,-197,-165,-248,-179,-171,-51,-87,-88,-62,-63,-65,-248,-67,-50,-64,-89,-128,-204,-225,-248,-211,-223,-161,-170,-248,-132,-134,-248,-68,362,-70,-199,-201,-210,-224,-203,-153,-152,-166,-157,-156,-186,369,-151,-131,-158,-173,-74,-78,-66,-180,392,-248,-248,-248,-79,-58,-248,-188,-185,-181,-187,-248,-160,-159,-248,-248,-73,414,-189,-248,-131,-182,423,-155,-154,-248,-75,-77,-183,-248,-76,]),'STRING':([6,24,42,61,64,67,71,76,82,98,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,162,168,186,202,206,213,218,232,237,238,242,245,246,261,277,289,290,296,307,308,311,317,323,329,330,335,347,353,355,356,363,368,370,371,373,374,375,376,386,400,403,418,],[-246,-247,72,107,72,-34,-33,72,72,107,-237,-233,72,-234,-235,-236,72,-241,72,-239,-243,-238,-232,-240,-242,-230,-244,-231,72,72,72,107,107,107,107,72,72,72,72,72,72,72,107,72,72,72,107,72,72,107,107,72,72,72,72,72,72,72,107,107,107,-246,107,72,-193,-192,107,72,72,72,]),'FOR':([6,91,178,229,256,297,305,312,372,378,381,389,390,397,401,402,407,408,419,426,],[-246,169,169,169,169,169,169,349,169,169,349,169,-188,349,349,349,-189,169,349,349,]),'UPARROW':([5,61,98,164,187,189,192,218,233,243,247,250,251,277,304,334,338,363,],[-245,115,115,247,-162,-164,-163,115,247,-162,-165,247,-162,115,-170,-166,247,115,]),'ELSE':([5,20,63,65,66,68,69,72,77,78,79,80,81,160,163,170,171,172,176,177,180,183,185,187,188,189,191,192,228,230,231,233,234,235,236,239,241,243,244,247,256,258,260,288,292,297,298,299,303,304,305,310,312,325,326,327,328,331,332,334,336,346,348,354,369,378,381,392,397,398,401,402,408,410,414,416,419,423,426,],[-245,-11,-222,-215,-217,-212,-219,-213,-220,-218,-214,-221,-216,-147,-142,-143,-140,-141,-150,-145,-148,-144,-149,-172,-146,-164,-135,-163,-127,-205,-208,-206,-202,-198,-207,-200,-209,-162,-197,-165,-248,-179,-171,-204,-225,-248,-211,-223,-161,-170,-248,-134,-248,-199,-201,-210,-224,-203,-153,-166,-157,-151,378,-173,-180,-248,-248,-181,-248,-160,-248,-248,-248,419,-182,-155,-248,-183,-248,]),'GE':([5,62,63,65,66,68,69,70,72,73,74,75,77,78,79,80,81,83,132,146,189,192,219,220,222,230,231,233,234,235,236,239,241,243,247,288,292,298,299,304,326,327,328,331,334,354,],[-245,-19,-222,-215,-217,-212,-219,137,-213,-24,-27,-21,-220,-218,-214,-221,-216,-25,-23,-28,-164,-163,-22,-20,-26,-205,-208,-206,-202,137,-207,-200,-209,-162,-165,-204,-225,-211,-223,-170,-201,-210,-224,-203,-166,-173,]),'SET':([61,98,106,218,277,363,],[108,108,108,108,108,108,]),'LPAREN':([4,5,24,42,46,61,64,67,71,76,82,92,94,98,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,162,168,186,187,206,213,218,223,232,237,238,242,243,245,246,261,277,289,290,296,308,311,323,329,330,335,347,353,355,356,363,374,375,376,385,400,403,418,],[8,-245,-247,76,88,118,76,-34,-33,76,76,88,-117,118,-237,-233,76,-234,-235,-236,76,-241,76,-239,-243,-238,-232,-240,-242,-230,-244,-231,237,237,237,261,118,118,118,88,237,237,237,237,261,237,237,237,118,237,237,237,237,237,118,237,237,237,237,237,237,237,118,237,-193,-192,404,237,237,237,]),'IN':([5,62,63,65,66,68,69,70,72,73,74,75,77,78,79,80,81,83,132,146,189,192,219,220,222,230,231,233,234,235,236,239,241,243,247,288,292,298,299,304,326,327,328,331,334,354,],[-245,-19,-222,-215,-217,-212,-219,143,-213,-24,-27,-21,-220,-218,-214,-221,-216,-25,-23,-28,-164,-163,-22,-20,-26,-205,-208,-206,-202,143,-207,-200,-209,-162,-165,-204,-225,-211,-223,-170,-201,-210,-224,-203,-166,-173,]),'VAR':([6,7,9,10,15,17,25,27,28,29,31,33,38,39,41,60,88,93,95,96,147,214,225,],[-246,-248,-8,-248,-248,-13,36,-39,-12,-15,-7,-248,-41,-38,-14,-40,154,-248,-248,-248,-16,-42,154,]),'UNTIL':([5,6,20,63,65,66,68,69,72,77,78,79,80,81,160,163,165,167,170,171,172,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,192,228,229,230,231,233,234,235,236,239,241,243,244,247,256,257,258,260,287,288,292,297,298,299,303,304,305,309,310,312,325,326,327,328,331,332,333,334,336,337,346,348,352,354,369,378,381,392,397,398,399,401,402,408,410,414,416,417,419,423,426,],[-245,-246,-11,-222,-215,-217,-212,-219,-213,-220,-218,-214,-221,-216,-147,-142,-136,-131,-143,-140,-141,-129,-138,-150,-145,-248,-148,-139,-130,-144,-137,-149,-172,-146,-164,-133,-135,-163,-127,-248,-205,-208,-206,-202,-198,-207,-200,-209,-162,-197,-165,-248,311,-179,-171,-128,-204,-225,-248,-211,-223,-161,-170,-248,-132,-134,-248,-199,-201,-210,-224,-203,-153,-152,-166,-157,-156,-151,-131,-158,-173,-180,-248,-248,-181,-248,-160,-159,-248,-248,-248,-131,-182,-155,-154,-248,-183,-248,]),'PROCEDURE':([6,7,9,10,15,17,25,27,28,29,31,33,35,37,38,39,41,60,86,88,93,95,96,97,147,214,225,],[-246,-248,-8,-248,-248,-13,-248,-39,-12,-15,-7,-248,52,-93,-41,-38,-14,-40,52,52,-248,-248,-248,-92,-16,-42,52,]),'IF':([6,91,178,229,256,297,305,312,372,378,381,389,390,397,401,402,407,408,419,426,],[-246,186,186,186,186,186,186,353,186,186,353,186,-188,353,353,353,-189,186,353,353,]),'AND':([5,62,63,65,66,68,69,72,73,74,75,77,78,79,80,81,83,132,146,189,192,219,220,222,230,231,233,234,236,239,241,243,247,288,292,298,299,304,326,327,328,331,334,354,],[-245,126,-222,-215,-217,-212,-219,-213,-24,-27,-21,-220,-218,-214,-221,-216,-25,-23,-28,-164,-163,-22,126,-26,-205,-208,-206,-202,-207,126,-209,-162,-165,-204,-225,-211,-223,-170,126,-210,-224,-203,-166,-173,]),'OCTDIGSEQ':([24,42,64,67,71,76,82,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,162,168,186,232,237,238,242,245,246,261,289,290,296,308,311,329,330,335,347,353,355,356,374,375,376,400,403,418,],[-247,77,77,-34,-33,77,77,-237,-233,77,-234,-235,-236,77,-241,77,-239,-243,-238,-232,-240,-242,-230,-244,-231,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-193,-192,77,77,77,]),'LBRAC':([5,24,67,71,112,126,127,129,130,131,134,136,137,138,139,140,141,142,143,144,162,164,168,186,187,189,192,232,233,237,238,242,243,245,246,247,250,251,261,289,290,296,304,308,311,329,330,334,335,338,347,353,355,356,374,375,376,400,403,418,],[-245,-247,-34,-33,213,-237,-233,-234,-235,-236,-241,-239,-243,-238,-232,-240,-242,-230,-244,-231,238,245,238,238,-162,-164,-163,238,245,238,238,238,-162,238,238,-165,245,-162,238,238,238,238,-170,238,238,238,238,-166,238,245,238,238,238,238,238,-193,-192,238,238,238,]),'NIL':([24,42,64,67,71,76,82,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,162,168,186,232,237,238,242,245,246,261,289,290,296,308,311,329,330,335,347,353,355,356,374,375,376,400,403,418,],[-247,79,79,-34,-33,79,79,-237,-233,79,-234,-235,-236,79,-241,79,-239,-243,-238,-232,-240,-242,-230,-244,-231,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-193,-192,79,79,79,]),'PFILE':([61,98,106,218,277,363,],[123,123,123,123,123,123,]),'OF':([5,63,65,66,68,69,72,77,78,79,80,81,108,123,189,192,230,231,233,234,235,236,239,241,243,247,252,253,270,271,273,288,292,298,299,304,322,325,326,327,328,331,334,354,360,361,],[-245,-222,-215,-217,-212,-219,-213,-220,-218,-214,-221,-216,206,218,-164,-163,-205,-208,-206,-202,-198,-207,-200,-209,-162,-165,307,-184,317,-86,-72,-204,-225,-211,-223,-170,363,-199,-201,-210,-224,-203,-166,-173,-86,-71,]),'DOWNTO':([5,63,65,66,68,69,72,77,78,79,80,81,189,192,230,231,233,234,235,236,239,241,243,247,288,292,298,299,304,325,326,327,328,331,334,344,345,354,409,],[-245,-222,-215,-217,-212,-219,-213,-220,-218,-214,-221,-216,-164,-163,-205,-208,-206,-202,-198,-207,-200,-209,-162,-165,-204,-225,-211,-223,-170,-199,-201,-210,-224,-203,-166,375,-191,-173,375,]),'BINDIGSEQ':([24,42,64,67,71,76,82,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,162,168,186,232,237,238,242,245,246,261,289,290,296,308,311,329,330,335,347,353,355,356,374,375,376,400,403,418,],[-247,80,80,-34,-33,80,80,-237,-233,80,-234,-235,-236,80,-241,80,-239,-243,-238,-232,-240,-242,-230,-244,-231,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-193,-192,80,80,80,]),'NOT':([24,42,64,67,71,76,82,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,162,168,186,232,237,238,242,245,246,261,289,290,296,308,311,329,330,335,347,353,355,356,374,375,376,400,403,418,],[-247,82,82,-34,-33,82,82,-237,-233,82,-234,-235,-236,82,-241,82,-239,-243,-238,-232,-240,-242,-230,-244,-231,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,-193,-192,242,242,242,]),'DIGSEQ':([6,11,24,32,42,61,64,67,71,76,82,91,98,102,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,162,168,178,179,186,202,206,213,218,229,232,237,238,242,245,246,261,277,289,290,296,297,305,307,308,311,312,317,323,329,330,335,347,353,355,356,363,368,370,371,372,373,374,375,376,378,386,389,390,397,400,401,402,403,407,408,418,419,426,],[-246,20,-247,20,78,117,78,-34,-33,78,78,20,117,117,-237,-233,78,-234,-235,-236,78,-241,78,-239,-243,-238,-232,-240,-242,-230,-244,-231,78,78,20,20,78,117,117,117,117,20,78,78,78,78,78,78,78,117,78,78,78,20,20,117,78,78,20,117,117,78,78,78,78,78,78,78,117,117,117,-246,20,117,78,-193,-192,20,117,20,-188,20,78,20,20,78,-189,20,78,20,20,]),'TYPE':([6,7,9,10,15,17,28,29,31,33,41,93,95,96,147,],[-246,-248,-8,-248,26,-13,-12,-15,-7,-248,-14,-248,-248,-248,-16,]),'OR':([5,62,63,65,66,68,69,70,72,73,74,75,77,78,79,80,81,83,132,146,189,192,219,220,221,222,230,231,233,234,235,236,239,241,243,247,288,292,298,299,304,325,326,327,328,331,334,354,],[-245,-19,-222,-215,-217,-212,-219,139,-213,-24,-27,-21,-220,-218,-214,-221,-216,-25,-23,-28,-164,-163,-22,-20,139,-26,-205,-208,-206,-202,139,-207,-200,-209,-162,-165,-204,-225,-211,-223,-170,139,-201,-210,-224,-203,-166,-173,]),'MOD':([5,62,63,65,66,68,69,72,73,74,75,77,78,79,80,81,83,132,146,189,192,219,220,222,230,231,233,234,236,239,241,243,247,288,292,298,299,304,326,327,328,331,334,354,],[-245,131,-222,-215,-217,-212,-219,-213,-24,-27,-21,-220,-218,-214,-221,-216,-25,-23,-28,-164,-163,-22,131,-26,-205,-208,-206,-202,-207,131,-209,-162,-165,-204,-225,-211,-223,-170,131,-210,-224,-203,-166,-173,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
    for _x,_y in zip(_v[0],_v[1]):
        if not _x in _lr_action:  _lr_action[_x] = {}
        _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cterm':([42,76,133,135,],[62,62,220,62,]),'file_type':([61,98,106,218,277,363,],[101,101,101,101,101,101,]),'variable_declaration_part':([25,],[35,]),'closed_if_statement':([91,178,229,256,297,305,312,372,378,381,389,397,401,402,408,419,426,],[160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,]),'new_type':([61,98,218,277,363,],[122,122,122,122,122,]),'comma':([14,18,58,155,211,217,226,249,280,293,300,313,343,358,380,],[23,32,23,23,23,23,23,306,323,329,335,355,373,373,306,]),'closed_statement':([91,178,229,297,305,312,372,378,389,397,401,402,408,419,426,],[167,167,167,332,336,348,167,398,167,332,336,410,416,398,416,]),'otherwisepart':([370,],[389,]),'final_value':([374,418,],[395,424,]),'field_designator':([91,162,166,168,178,186,229,232,237,238,242,245,246,256,261,289,290,296,297,305,306,308,311,312,329,330,335,347,350,353,355,356,372,374,378,381,389,397,400,401,402,403,408,418,419,426,],[189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,]),'procedure_statement':([91,178,229,256,297,305,312,372,378,381,389,397,401,402,408,419,426,],[172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,]),'index_type':([213,323,],[278,364,]),'enumerated_type':([61,98,206,213,218,277,323,363,],[111,111,111,111,111,111,111,111,]),'program':([0,],[1,]),'variable_parameter_specification':([88,225,],[150,150,]),'type_definition_list':([26,],[39,]),'formal_parameter_list':([46,92,223,],[87,193,193,]),'formal_parameter_section_list':([88,],[153,]),'index_expression_list':([245,],[300,]),'index_list':([213,],[280,]),'domain_type':([115,],[215,]),'cfactor':([42,64,76,128,133,135,],[75,132,75,219,75,75,]),'case_list_element':([307,370,],[340,391,]),'case_constant':([307,317,370,373,386,],[341,341,341,394,341,]),'case_list_element_list':([307,],[342,]),'type_definition':([26,39,],[38,60,]),'term':([162,168,186,237,238,245,246,261,289,290,308,311,329,330,335,347,353,355,356,374,400,403,418,],[239,239,239,239,239,239,239,239,239,326,239,239,239,239,239,239,239,239,239,239,239,239,239,]),'closed_with_statement':([91,178,229,256,297,305,312,372,378,381,389,397,401,402,408,419,426,],[188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,]),'record_type':([61,98,106,218,277,363,],[105,105,105,105,105,105,]),'boolean_expression':([162,186,311,347,353,],[240,259,346,377,382,]),'actual_parameter':([261,355,],[314,383,]),'identifier':([3,8,16,23,26,28,36,39,42,50,52,61,64,76,82,88,91,97,98,102,110,115,118,128,133,135,151,154,162,166,168,169,178,186,194,202,206,207,213,218,225,227,229,232,237,238,242,245,246,248,256,261,262,275,277,285,289,290,296,297,305,306,307,308,311,312,317,318,323,329,330,335,347,349,350,353,355,356,363,368,370,372,373,374,378,381,386,389,397,400,401,402,403,404,408,418,419,421,426,],[4,13,30,34,40,30,13,40,83,92,94,125,83,83,83,13,187,13,125,203,13,216,13,83,83,83,223,13,243,251,243,255,187,243,263,203,269,271,269,125,13,286,187,243,243,243,243,243,243,304,187,243,263,13,125,324,243,243,243,187,187,251,203,243,243,187,203,360,269,243,243,243,243,255,251,243,243,243,125,203,203,187,203,243,187,187,203,187,187,243,187,187,243,13,187,243,187,13,187,]),'unsigned_integer':([42,64,76,82,128,133,135,162,168,186,232,237,238,242,245,246,261,289,290,296,308,311,329,330,335,347,353,355,356,374,400,403,418,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'actual_parameter_list':([261,],[313,]),'label_list':([11,],[18,]),'sign':([42,61,64,76,98,128,133,135,162,168,186,202,206,213,218,232,237,238,245,246,261,277,289,290,296,307,308,311,317,323,329,330,335,347,353,355,356,363,368,370,373,374,386,400,403,418,],[64,102,64,64,102,64,64,64,232,232,232,102,102,102,102,232,232,232,232,232,232,102,232,232,232,102,232,232,102,102,232,232,232,232,232,232,232,102,102,102,102,232,102,232,232,232,]),'procedure_identification':([35,86,88,225,],[46,46,46,46,]),'goto_statement':([91,178,229,256,297,305,312,372,378,381,389,397,401,402,408,419,426,],[163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,]),'unsigned_real':([42,64,76,82,128,133,135,162,168,186,232,237,238,242,245,246,261,289,290,296,308,311,329,330,335,347,353,355,356,374,400,403,418,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'open_with_statement':([91,178,229,256,297,305,312,372,378,381,389,397,401,402,408,419,426,],[165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,]),'tag_field':([207,],[272,]),'simple_expression':([162,168,186,237,238,245,246,261,289,308,311,329,330,335,347,353,355,356,374,400,403,418,],[235,235,235,235,235,235,235,235,325,235,235,235,235,235,235,235,235,235,235,235,235,235,]),'constant_definition_part':([10,],[15,]),'ordinal_type':([206,213,323,],[267,279,279,]),'compound_statement':([47,91,178,229,256,297,305,312,372,378,381,389,397,401,402,408,419,426,],[90,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,]),'member_designator_list':([238,],[293,]),'statement_part':([47,],[89,]),'label':([11,32,91,178,179,229,297,305,312,372,378,389,397,401,402,408,419,426,],[19,43,173,173,258,173,173,173,351,173,173,173,351,351,351,173,351,351,]),'proc_or_func_declaration':([35,86,],[48,148,]),'unsigned_number':([42,64,76,82,128,133,135,162,168,186,232,237,238,242,245,246,261,289,290,296,308,311,329,330,335,347,353,355,356,374,400,403,418,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'type_denoter':([61,98,218,277,363,],[113,201,282,321,282,]),'procedural_parameter_specification':([88,225,],[152,152,]),'closed_while_statement':([91,178,229,256,297,305,312,372,378,381,389,397,401,402,408,419,426,],[180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,]),'cprimary':([42,64,76,82,128,133,135,],[73,73,73,146,73,73,73,]),'open_for_statement':([91,178,229,256,297,305,312,372,378,381,389,397,401,402,408,419,426,],[181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,]),'record_variable_list':([166,350,],[249,380,]),'set_type':([61,98,106,218,277,363,],[116,116,116,116,116,116,]),'case_statement':([91,178,229,256,297,305,312,372,378,381,389,397,401,402,408,419,426,],[183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,]),'open_if_statement':([91,178,229,256,297,305,312,372,378,381,389,397,401,402,408,419,426,],[184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,]),'array_type':([61,98,106,218,277,363,],[119,119,119,119,119,119,]),'case_index':([168,],[252,]),'type_definition_part':([15,],[25,]),'constant_list':([16,],[28,]),'function_declaration':([35,86,],[54,54,]),'component_type':([218,363,],[283,387,]),'function_heading':([35,86,88,225,],[56,56,158,158,]),'label_declaration_part':([7,33,93,95,96,],[10,10,10,10,10,]),'expression':([162,168,186,237,238,245,246,261,308,311,329,330,335,347,353,355,356,374,400,403,418,],[244,253,244,291,295,302,303,315,345,244,295,366,302,244,244,315,384,396,345,411,396,]),'new_pointer_type':([61,98,218,277,363,],[124,124,124,124,124,]),'index_expression':([245,335,],[301,367,]),'mulop':([62,220,239,326,],[128,128,296,296,]),'statement_sequence':([91,178,],[161,257,]),'cexpression':([42,76,],[84,145,]),'indexed_variable':([91,162,166,168,178,186,229,232,237,238,242,245,246,256,261,289,290,296,297,305,306,308,311,312,329,330,335,347,350,353,355,356,372,374,378,381,389,397,400,401,402,403,408,418,419,426,],[192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,]),'primary':([162,168,186,232,237,238,242,245,246,261,289,290,296,308,311,329,330,335,347,353,355,356,374,400,403,418,],[230,230,230,230,230,230,298,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,]),'control_variable':([169,349,],[254,379,]),'constant_definition':([16,28,],[29,41,]),'set_constructor':([162,168,186,232,237,238,242,245,246,261,289,290,296,308,311,329,330,335,347,353,355,356,374,400,403,418,],[241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,]),'proc_or_func_declaration_list':([35,],[45,]),'value_parameter_specification':([88,225,],[149,149,]),'variable_declaration':([36,97,],[59,200,]),'assignment_statement':([91,178,229,256,297,305,312,372,378,381,389,397,401,402,408,419,426,],[171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,]),'params':([187,243,],[260,299,]),'statement':([91,178,229,312,372,389,402,],[174,174,287,352,393,406,352,]),'csimple_expression':([42,76,135,],[70,70,221,]),'non_labeled_open_statement':([91,178,229,256,297,305,312,372,378,381,389,397,401,402,408,419,426,],[190,190,190,309,190,190,190,190,190,309,190,190,190,190,190,190,190,]),'empty':([7,10,15,25,33,35,91,93,95,96,110,178,229,256,275,297,305,312,372,378,381,389,397,401,402,404,408,419,421,426,],[9,17,27,37,9,49,176,9,9,9,212,176,176,176,212,176,176,176,176,176,176,176,176,176,176,212,176,176,212,176,]),'repeat_statement':([91,178,229,256,297,305,312,372,378,381,389,397,401,402,408,419,426,],[177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,]),'addop':([70,221,235,325,],[133,133,290,290,]),'direction':([344,409,],[374,418,]),'subrange_type':([61,98,206,213,218,277,323,363,],[114,114,114,114,114,114,114,114,]),'factor':([162,168,186,232,237,238,245,246,261,289,290,296,308,311,329,330,335,347,353,355,356,374,400,403,418,],[234,234,234,288,234,234,234,234,234,234,234,331,234,234,234,234,234,234,234,234,234,234,234,234,234,]),'open_statement':([91,178,229,297,305,312,372,378,389,397,401,402,408,419,426,],[182,182,182,333,337,182,182,399,182,333,337,182,417,399,417,]),'record_section_list':([110,404,],[209,412,]),'variable_declaration_list':([36,],[57,]),'closed_for_statement':([91,178,229,256,297,305,312,372,378,381,389,397,401,402,408,419,426,],[185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,]),'new_ordinal_type':([61,98,206,213,218,277,323,363,],[103,103,268,268,103,103,268,103,]),'procedure_heading':([35,86,88,225,],[53,53,156,156,]),'record_section':([110,275,404,421,],[208,319,208,319,]),'procedure_declaration':([35,86,],[55,55,]),'initial_value':([308,400,],[344,409,]),'variant_list':([317,],[359,]),'non_labeled_closed_statement':([91,178,229,256,297,305,312,372,378,381,389,397,401,402,408,419,426,],[191,191,191,310,191,191,191,191,191,310,191,191,191,191,191,191,191,]),'functional_parameter_specification':([88,225,],[157,157,]),'constant':([61,98,202,206,213,218,277,307,317,323,363,368,370,373,386,],[99,99,265,99,99,99,99,339,339,99,99,388,339,339,339,]),'semicolon':([4,18,22,45,51,53,56,57,84,113,153,161,209,257,342,359,412,],[7,31,33,86,93,95,96,97,147,214,225,229,275,229,370,386,421,]),'function_designator':([162,168,186,232,237,238,242,245,246,261,289,290,296,308,311,329,330,335,347,353,355,356,374,400,403,418,],[231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,]),'new_structured_type':([61,98,218,277,363,],[104,104,104,104,104,]),'file':([0,],[2,]),'variant_selector':([207,],[270,]),'procedure_and_function_declaration_part':([35,],[47,]),'non_string':([61,98,102,202,206,213,218,277,307,317,323,363,368,370,373,386,],[109,109,204,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'variable_access':([91,162,166,168,178,186,229,232,237,238,242,245,246,256,261,289,290,296,297,305,306,308,311,312,329,330,335,347,350,353,355,356,372,374,378,381,389,397,400,401,402,403,408,418,419,426,],[164,233,250,233,164,233,164,233,233,233,233,233,233,164,233,233,233,233,164,164,338,233,233,164,233,233,233,233,250,233,233,233,164,233,164,164,164,164,233,164,164,233,164,233,164,164,]),'base_type':([206,],[266,]),'member_designator':([238,329,],[294,365,]),'structured_type':([61,98,106,218,277,363,],[121,121,205,121,121,121,]),'open_while_statement':([91,178,229,256,297,305,312,372,378,381,389,397,401,402,408,419,426,],[175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,]),'procedure_block':([95,],[197,]),'variant':([317,386,],[357,405,]),'unsigned_constant':([42,64,76,82,128,133,135,162,168,186,232,237,238,242,245,246,261,289,290,296,308,311,329,330,335,347,353,355,356,374,400,403,418,],[74,74,74,74,74,74,74,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,]),'function_identification':([35,86,],[51,51,]),'variant_part':([110,275,404,421,],[210,320,413,425,]),'function_block':([93,96,],[195,199,]),'identifier_list':([8,36,88,97,110,118,154,225,275,404,421,],[14,58,155,58,211,217,226,155,211,211,211,]),'case_constant_list':([307,317,370,386,],[343,358,343,358,]),'relop':([70,235,],[135,289,]),'formal_parameter_section':([88,225,],[159,284,]),'block':([7,33,93,95,96,],[12,44,196,198,196,]),'result_type':([194,262,],[264,316,]),'tag_type':([207,318,],[273,361,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_goto: _lr_goto[_x] = {}
        _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> file","S'",1,None,None,None),
  ('file -> program','file',1,'p_file_1','parser.py',57),
  ('program -> PROGRAM identifier LPAREN identifier_list RPAREN semicolon block DOT','program',8,'p_program_1','parser.py',63),
  ('program -> PROGRAM identifier semicolon block DOT','program',5,'p_program_2','parser.py',70),
  ('identifier_list -> identifier_list comma identifier','identifier_list',3,'p_identifier_list_1','parser.py',76),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list_2','parser.py',82),
  ('block -> label_declaration_part constant_definition_part type_definition_part variable_declaration_part procedure_and_function_declaration_part statement_part','block',6,'p_block_1','parser.py',88),
  ('label_declaration_part -> LABEL label_list semicolon','label_declaration_part',3,'p_label_declaration_part_1','parser.py',94),
  ('label_declaration_part -> empty','label_declaration_part',1,'p_label_declaration_part_2','parser.py',100),
  ('label_list -> label_list comma label','label_list',3,'p_label_list_1','parser.py',105),
  ('label_list -> label','label_list',1,'p_label_list_2','parser.py',111),
  ('label -> DIGSEQ','label',1,'p_label_1','parser.py',117),
  ('constant_definition_part -> CONST constant_list','constant_definition_part',2,'p_constant_definition_part_1','parser.py',123),
  ('constant_definition_part -> empty','constant_definition_part',1,'p_constant_definition_part_2','parser.py',128),
  ('constant_list -> constant_list constant_definition','constant_list',2,'p_constant_list_1','parser.py',133),
  ('constant_list -> constant_definition','constant_list',1,'p_constant_list_2','parser.py',139),
  ('constant_definition -> identifier EQUAL cexpression semicolon','constant_definition',4,'p_constant_definition_1','parser.py',145),
  ('cexpression -> csimple_expression','cexpression',1,'p_cexpression_1','parser.py',151),
  ('cexpression -> csimple_expression relop csimple_expression','cexpression',3,'p_cexpression_2','parser.py',156),
  ('csimple_expression -> cterm','csimple_expression',1,'p_csimple_expression_1','parser.py',162),
  ('csimple_expression -> csimple_expression addop cterm','csimple_expression',3,'p_csimple_expression_2','parser.py',167),
  ('cterm -> cfactor','cterm',1,'p_cterm_1','parser.py',173),
  ('cterm -> cterm mulop cfactor','cterm',3,'p_cterm_2','parser.py',178),
  ('cfactor -> sign cfactor','cfactor',2,'p_cfactor_1','parser.py',184),
  ('cfactor -> cprimary','cfactor',1,'p_cfactor_2','parser.py',190),
  ('cprimary -> identifier','cprimary',1,'p_cprimary_1','parser.py',195),
  ('cprimary -> LPAREN cexpression RPAREN','cprimary',3,'p_cprimary_2','parser.py',200),
  ('cprimary -> unsigned_constant','cprimary',1,'p_cprimary_3','parser.py',205),
  ('cprimary -> NOT cprimary','cprimary',2,'p_cprimary_4','parser.py',210),
  ('constant -> non_string','constant',1,'p_constant_1','parser.py',216),
  ('constant -> sign non_string','constant',2,'p_constant_2','parser.py',221),
  ('constant -> STRING','constant',1,'p_constant_3','parser.py',227),
  ('constant -> CHAR','constant',1,'p_constant_4','parser.py',233),
  ('sign -> PLUS','sign',1,'p_sign_1','parser.py',239),
  ('sign -> MINUS','sign',1,'p_sign_2','parser.py',244),
  ('non_string -> DIGSEQ','non_string',1,'p_non_string_1','parser.py',249),
  ('non_string -> identifier','non_string',1,'p_non_string_2','parser.py',255),
  ('non_string -> REALNUMBER','non_string',1,'p_non_string_3','parser.py',261),
  ('type_definition_part -> TYPE type_definition_list','type_definition_part',2,'p_type_definition_part_1','parser.py',267),
  ('type_definition_part -> empty','type_definition_part',1,'p_type_definition_part_2','parser.py',272),
  ('type_definition_list -> type_definition_list type_definition','type_definition_list',2,'p_type_definition_list_1','parser.py',277),
  ('type_definition_list -> type_definition','type_definition_list',1,'p_type_definition_list_2','parser.py',283),
  ('type_definition -> identifier EQUAL type_denoter semicolon','type_definition',4,'p_type_definition_1','parser.py',289),
  ('type_denoter -> identifier','type_denoter',1,'p_type_denoter_1','parser.py',295),
  ('type_denoter -> new_type','type_denoter',1,'p_type_denoter_2','parser.py',301),
  ('new_type -> new_ordinal_type','new_type',1,'p_new_type_1','parser.py',306),
  ('new_type -> new_structured_type','new_type',1,'p_new_type_2','parser.py',311),
  ('new_type -> new_pointer_type','new_type',1,'p_new_type_3','parser.py',316),
  ('new_ordinal_type -> enumerated_type','new_ordinal_type',1,'p_new_ordinal_type_1','parser.py',321),
  ('new_ordinal_type -> subrange_type','new_ordinal_type',1,'p_new_ordinal_type_2','parser.py',326),
  ('enumerated_type -> LPAREN identifier_list RPAREN','enumerated_type',3,'p_enumerated_type_1','parser.py',331),
  ('subrange_type -> constant DOTDOT constant','subrange_type',3,'p_subrange_type_1','parser.py',337),
  ('new_structured_type -> structured_type','new_structured_type',1,'p_new_structured_type_1','parser.py',343),
  ('new_structured_type -> PACKED structured_type','new_structured_type',2,'p_new_structured_type_2','parser.py',348),
  ('structured_type -> array_type','structured_type',1,'p_structured_type_1','parser.py',354),
  ('structured_type -> record_type','structured_type',1,'p_structured_type_2','parser.py',359),
  ('structured_type -> set_type','structured_type',1,'p_structured_type_3','parser.py',364),
  ('structured_type -> file_type','structured_type',1,'p_structured_type_4','parser.py',369),
  ('array_type -> ARRAY LBRAC index_list RBRAC OF component_type','array_type',6,'p_array_type_1','parser.py',375),
  ('index_list -> index_list comma index_type','index_list',3,'p_index_list_1','parser.py',381),
  ('index_list -> index_type','index_list',1,'p_index_list_2','parser.py',387),
  ('index_type -> ordinal_type','index_type',1,'p_index_type_1','parser.py',393),
  ('ordinal_type -> new_ordinal_type','ordinal_type',1,'p_ordinal_type_1','parser.py',398),
  ('ordinal_type -> identifier','ordinal_type',1,'p_ordinal_type_2','parser.py',403),
  ('component_type -> type_denoter','component_type',1,'p_component_type_1','parser.py',408),
  ('record_type -> RECORD record_section_list END','record_type',3,'p_record_type_1','parser.py',413),
  ('record_type -> RECORD record_section_list semicolon variant_part END','record_type',5,'p_record_type_2','parser.py',419),
  ('record_type -> RECORD variant_part END','record_type',3,'p_record_type_3','parser.py',425),
  ('record_section_list -> record_section_list semicolon record_section','record_section_list',3,'p_record_section_list_1','parser.py',431),
  ('record_section_list -> record_section','record_section_list',1,'p_record_section_list_2','parser.py',437),
  ('record_section -> identifier_list COLON type_denoter','record_section',3,'p_record_section_1','parser.py',443),
  ('variant_selector -> tag_field COLON tag_type','variant_selector',3,'p_variant_selector_1','parser.py',449),
  ('variant_selector -> tag_type','variant_selector',1,'p_variant_selector_2','parser.py',455),
  ('variant_list -> variant_list semicolon variant','variant_list',3,'p_variant_list_1','parser.py',461),
  ('variant_list -> variant','variant_list',1,'p_variant_list_2','parser.py',467),
  ('variant -> case_constant_list COLON LPAREN record_section_list RPAREN','variant',5,'p_variant_1','parser.py',473),
  ('variant -> case_constant_list COLON LPAREN record_section_list semicolon variant_part RPAREN','variant',7,'p_variant_2','parser.py',479),
  ('variant -> case_constant_list COLON LPAREN variant_part RPAREN','variant',5,'p_variant_3','parser.py',485),
  ('variant_part -> CASE variant_selector OF variant_list','variant_part',4,'p_variant_part_1','parser.py',491),
  ('variant_part -> CASE variant_selector OF variant_list semicolon','variant_part',5,'p_variant_part_2','parser.py',497),
  ('variant_part -> empty','variant_part',1,'p_variant_part_3','parser.py',503),
  ('case_constant_list -> case_constant_list comma case_constant','case_constant_list',3,'p_case_constant_list_1','parser.py',508),
  ('case_constant_list -> case_constant','case_constant_list',1,'p_case_constant_list_2','parser.py',514),
  ('case_constant -> constant','case_constant',1,'p_case_constant_1','parser.py',520),
  ('case_constant -> constant DOTDOT constant','case_constant',3,'p_case_constant_2','parser.py',526),
  ('tag_field -> identifier','tag_field',1,'p_tag_field_1','parser.py',532),
  ('tag_type -> identifier','tag_type',1,'p_tag_type_1','parser.py',537),
  ('set_type -> SET OF base_type','set_type',3,'p_set_type_1','parser.py',542),
  ('base_type -> ordinal_type','base_type',1,'p_base_type_1','parser.py',548),
  ('file_type -> PFILE OF component_type','file_type',3,'p_file_type_1','parser.py',553),
  ('new_pointer_type -> UPARROW domain_type','new_pointer_type',2,'p_new_pointer_type_1','parser.py',559),
  ('domain_type -> identifier','domain_type',1,'p_domain_type_1','parser.py',565),
  ('variable_declaration_part -> VAR variable_declaration_list semicolon','variable_declaration_part',3,'p_variable_declaration_part_1','parser.py',571),
  ('variable_declaration_part -> empty','variable_declaration_part',1,'p_variable_declaration_part_2','parser.py',576),
  ('variable_declaration_list -> variable_declaration_list semicolon variable_declaration','variable_declaration_list',3,'p_variable_declaration_list_1','parser.py',581),
  ('variable_declaration_list -> variable_declaration','variable_declaration_list',1,'p_variable_declaration_list_2','parser.py',587),
  ('variable_declaration -> identifier_list COLON type_denoter','variable_declaration',3,'p_variable_declaration_1','parser.py',593),
  ('procedure_and_function_declaration_part -> proc_or_func_declaration_list semicolon','procedure_and_function_declaration_part',2,'p_procedure_and_function_declaration_part_1','parser.py',599),
  ('procedure_and_function_declaration_part -> empty','procedure_and_function_declaration_part',1,'p_procedure_and_function_declaration_part_2','parser.py',604),
  ('proc_or_func_declaration_list -> proc_or_func_declaration_list semicolon proc_or_func_declaration','proc_or_func_declaration_list',3,'p_proc_or_func_declaration_list_1','parser.py',609),
  ('proc_or_func_declaration_list -> proc_or_func_declaration','proc_or_func_declaration_list',1,'p_proc_or_func_declaration_list_2','parser.py',615),
  ('proc_or_func_declaration -> procedure_declaration','proc_or_func_declaration',1,'p_proc_or_func_declaration_1','parser.py',621),
  ('proc_or_func_declaration -> function_declaration','proc_or_func_declaration',1,'p_proc_or_func_declaration_2','parser.py',626),
  ('procedure_declaration -> procedure_heading semicolon procedure_block','procedure_declaration',3,'p_procedure_declaration_1','parser.py',631),
  ('procedure_heading -> procedure_identification','procedure_heading',1,'p_procedure_heading_1','parser.py',637),
  ('procedure_heading -> procedure_identification formal_parameter_list','procedure_heading',2,'p_procedure_heading_2','parser.py',643),
  ('formal_parameter_list -> LPAREN formal_parameter_section_list RPAREN','formal_parameter_list',3,'p_formal_parameter_list_1','parser.py',649),
  ('formal_parameter_section_list -> formal_parameter_section_list semicolon formal_parameter_section','formal_parameter_section_list',3,'p_formal_parameter_section_list_1','parser.py',654),
  ('formal_parameter_section_list -> formal_parameter_section','formal_parameter_section_list',1,'p_formal_parameter_section_list_2','parser.py',660),
  ('formal_parameter_section -> value_parameter_specification','formal_parameter_section',1,'p_formal_parameter_section_1','parser.py',666),
  ('formal_parameter_section -> variable_parameter_specification','formal_parameter_section',1,'p_formal_parameter_section_2','parser.py',671),
  ('formal_parameter_section -> procedural_parameter_specification','formal_parameter_section',1,'p_formal_parameter_section_3','parser.py',676),
  ('formal_parameter_section -> functional_parameter_specification','formal_parameter_section',1,'p_formal_parameter_section_4','parser.py',681),
  ('value_parameter_specification -> identifier_list COLON identifier','value_parameter_specification',3,'p_value_parameter_specification_1','parser.py',686),
  ('variable_parameter_specification -> VAR identifier_list COLON identifier','variable_parameter_specification',4,'p_variable_parameter_specification_1','parser.py',693),
  ('procedural_parameter_specification -> procedure_heading','procedural_parameter_specification',1,'p_procedural_parameter_specification_1','parser.py',700),
  ('functional_parameter_specification -> function_heading','functional_parameter_specification',1,'p_functional_parameter_specification_1','parser.py',706),
  ('procedure_identification -> PROCEDURE identifier','procedure_identification',2,'p_procedure_identification_1','parser.py',712),
  ('procedure_block -> block','procedure_block',1,'p_procedure_block_1','parser.py',717),
  ('function_declaration -> function_identification semicolon function_block','function_declaration',3,'p_function_declaration_1','parser.py',723),
  ('function_declaration -> function_heading semicolon function_block','function_declaration',3,'p_function_declaration_2','parser.py',730),
  ('function_heading -> FUNCTION identifier COLON result_type','function_heading',4,'p_function_heading_1','parser.py',736),
  ('function_heading -> FUNCTION identifier formal_parameter_list COLON result_type','function_heading',5,'p_function_heading_2','parser.py',742),
  ('result_type -> identifier','result_type',1,'p_result_type_1','parser.py',748),
  ('function_identification -> FUNCTION identifier','function_identification',2,'p_function_identification_1','parser.py',754),
  ('function_block -> block','function_block',1,'p_function_block_1','parser.py',760),
  ('statement_part -> compound_statement','statement_part',1,'p_statement_part_1','parser.py',765),
  ('compound_statement -> PBEGIN statement_sequence END','compound_statement',3,'p_compound_statement_1','parser.py',770),
  ('statement_sequence -> statement_sequence semicolon statement','statement_sequence',3,'p_statement_sequence_1','parser.py',775),
  ('statement_sequence -> statement','statement_sequence',1,'p_statement_sequence_2','parser.py',781),
  ('statement -> open_statement','statement',1,'p_statement_1','parser.py',787),
  ('statement -> closed_statement','statement',1,'p_statement_2','parser.py',792),
  ('open_statement -> label COLON non_labeled_open_statement','open_statement',3,'p_open_statement_1','parser.py',797),
  ('open_statement -> non_labeled_open_statement','open_statement',1,'p_open_statement_2','parser.py',803),
  ('closed_statement -> label COLON non_labeled_closed_statement','closed_statement',3,'p_closed_statement_1','parser.py',808),
  ('closed_statement -> non_labeled_closed_statement','closed_statement',1,'p_closed_statement_2','parser.py',814),
  ('non_labeled_open_statement -> open_with_statement','non_labeled_open_statement',1,'p_non_labeled_open_statement_1','parser.py',819),
  ('non_labeled_open_statement -> open_if_statement','non_labeled_open_statement',1,'p_non_labeled_open_statement_2','parser.py',824),
  ('non_labeled_open_statement -> open_while_statement','non_labeled_open_statement',1,'p_non_labeled_open_statement_3','parser.py',829),
  ('non_labeled_open_statement -> open_for_statement','non_labeled_open_statement',1,'p_non_labeled_open_statement_4','parser.py',834),
  ('non_labeled_closed_statement -> assignment_statement','non_labeled_closed_statement',1,'p_non_labeled_closed_statement','parser.py',840),
  ('non_labeled_closed_statement -> procedure_statement','non_labeled_closed_statement',1,'p_non_labeled_closed_statement','parser.py',841),
  ('non_labeled_closed_statement -> goto_statement','non_labeled_closed_statement',1,'p_non_labeled_closed_statement','parser.py',842),
  ('non_labeled_closed_statement -> compound_statement','non_labeled_closed_statement',1,'p_non_labeled_closed_statement','parser.py',843),
  ('non_labeled_closed_statement -> case_statement','non_labeled_closed_statement',1,'p_non_labeled_closed_statement','parser.py',844),
  ('non_labeled_closed_statement -> repeat_statement','non_labeled_closed_statement',1,'p_non_labeled_closed_statement','parser.py',845),
  ('non_labeled_closed_statement -> closed_with_statement','non_labeled_closed_statement',1,'p_non_labeled_closed_statement','parser.py',846),
  ('non_labeled_closed_statement -> closed_if_statement','non_labeled_closed_statement',1,'p_non_labeled_closed_statement','parser.py',847),
  ('non_labeled_closed_statement -> closed_while_statement','non_labeled_closed_statement',1,'p_non_labeled_closed_statement','parser.py',848),
  ('non_labeled_closed_statement -> closed_for_statement','non_labeled_closed_statement',1,'p_non_labeled_closed_statement','parser.py',849),
  ('non_labeled_closed_statement -> empty','non_labeled_closed_statement',1,'p_non_labeled_closed_statement','parser.py',850),
  ('repeat_statement -> REPEAT statement_sequence UNTIL boolean_expression','repeat_statement',4,'p_repeat_statement_1','parser.py',858),
  ('open_while_statement -> WHILE boolean_expression DO open_statement','open_while_statement',4,'p_open_while_statement_1','parser.py',864),
  ('closed_while_statement -> WHILE boolean_expression DO closed_statement','closed_while_statement',4,'p_closed_while_statement_1','parser.py',870),
  ('open_for_statement -> FOR control_variable ASSIGNMENT initial_value direction final_value DO open_statement','open_for_statement',8,'p_open_for_statement_1','parser.py',876),
  ('closed_for_statement -> FOR control_variable ASSIGNMENT initial_value direction final_value DO closed_statement','closed_for_statement',8,'p_closed_for_statement_1','parser.py',882),
  ('open_with_statement -> WITH record_variable_list DO open_statement','open_with_statement',4,'p_open_with_statement_1','parser.py',888),
  ('closed_with_statement -> WITH record_variable_list DO closed_statement','closed_with_statement',4,'p_closed_with_statement_1','parser.py',894),
  ('open_if_statement -> IF boolean_expression THEN statement','open_if_statement',4,'p_open_if_statement_1','parser.py',900),
  ('open_if_statement -> IF boolean_expression THEN closed_statement ELSE open_statement','open_if_statement',6,'p_open_if_statement_2','parser.py',906),
  ('closed_if_statement -> IF boolean_expression THEN closed_statement ELSE closed_statement','closed_if_statement',6,'p_closed_if_statement_1','parser.py',912),
  ('assignment_statement -> variable_access ASSIGNMENT expression','assignment_statement',3,'p_assignment_statement_1','parser.py',918),
  ('variable_access -> identifier','variable_access',1,'p_variable_access_1','parser.py',924),
  ('variable_access -> indexed_variable','variable_access',1,'p_variable_access_2','parser.py',930),
  ('variable_access -> field_designator','variable_access',1,'p_variable_access_3','parser.py',935),
  ('variable_access -> variable_access UPARROW','variable_access',2,'p_variable_access_4','parser.py',940),
  ('indexed_variable -> variable_access LBRAC index_expression_list RBRAC','indexed_variable',4,'p_indexed_variable_1','parser.py',946),
  ('index_expression_list -> index_expression_list comma index_expression','index_expression_list',3,'p_index_expression_list_1','parser.py',952),
  ('index_expression_list -> index_expression','index_expression_list',1,'p_index_expression_list_2','parser.py',958),
  ('index_expression -> expression','index_expression',1,'p_index_expression_1','parser.py',964),
  ('field_designator -> variable_access DOT identifier','field_designator',3,'p_field_designator_1','parser.py',969),
  ('procedure_statement -> identifier params','procedure_statement',2,'p_procedure_statement_1','parser.py',975),
  ('procedure_statement -> identifier','procedure_statement',1,'p_procedure_statement_2','parser.py',981),
  ('params -> LPAREN actual_parameter_list RPAREN','params',3,'p_params_1','parser.py',987),
  ('actual_parameter_list -> actual_parameter_list comma actual_parameter','actual_parameter_list',3,'p_actual_parameter_list_1','parser.py',992),
  ('actual_parameter_list -> actual_parameter','actual_parameter_list',1,'p_actual_parameter_list_2','parser.py',998),
  ('actual_parameter -> expression','actual_parameter',1,'p_actual_parameter_1','parser.py',1004),
  ('actual_parameter -> expression COLON expression','actual_parameter',3,'p_actual_parameter_2','parser.py',1010),
  ('actual_parameter -> expression COLON expression COLON expression','actual_parameter',5,'p_actual_parameter_3','parser.py',1017),
  ('goto_statement -> GOTO label','goto_statement',2,'p_goto_statement_1','parser.py',1024),
  ('case_statement -> CASE case_index OF case_list_element_list END','case_statement',5,'p_case_statement_1','parser.py',1030),
  ('case_statement -> CASE case_index OF case_list_element_list SEMICOLON END','case_statement',6,'p_case_statement_2','parser.py',1037),
  ('case_statement -> CASE case_index OF case_list_element_list semicolon otherwisepart statement END','case_statement',8,'p_case_statement_3','parser.py',1044),
  ('case_statement -> CASE case_index OF case_list_element_list semicolon otherwisepart statement SEMICOLON END','case_statement',9,'p_case_statement_4','parser.py',1050),
  ('case_index -> expression','case_index',1,'p_case_index_1','parser.py',1056),
  ('case_list_element_list -> case_list_element_list semicolon case_list_element','case_list_element_list',3,'p_case_list_element_list_1','parser.py',1062),
  ('case_list_element_list -> case_list_element','case_list_element_list',1,'p_case_list_element_list_2','parser.py',1069),
  ('case_list_element -> case_constant_list COLON statement','case_list_element',3,'p_case_list_element_1','parser.py',1075),
  ('otherwisepart -> OTHERWISE','otherwisepart',1,'p_otherwisepart_1','parser.py',1081),
  ('otherwisepart -> OTHERWISE COLON','otherwisepart',2,'p_otherwisepart_2','parser.py',1086),
  ('control_variable -> identifier','control_variable',1,'p_control_variable_1','parser.py',1091),
  ('initial_value -> expression','initial_value',1,'p_initial_value_1','parser.py',1096),
  ('direction -> TO','direction',1,'p_direction_1','parser.py',1101),
  ('direction -> DOWNTO','direction',1,'p_direction_2','parser.py',1106),
  ('final_value -> expression','final_value',1,'p_final_value_1','parser.py',1111),
  ('record_variable_list -> record_variable_list comma variable_access','record_variable_list',3,'p_record_variable_list_1','parser.py',1116),
  ('record_variable_list -> variable_access','record_variable_list',1,'p_record_variable_list_2','parser.py',1122),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression_1','parser.py',1128),
  ('expression -> simple_expression','expression',1,'p_expression_1','parser.py',1133),
  ('expression -> simple_expression relop simple_expression','expression',3,'p_expression_2','parser.py',1138),
  ('simple_expression -> term','simple_expression',1,'p_simple_expression_1','parser.py',1144),
  ('simple_expression -> simple_expression addop term','simple_expression',3,'p_simple_expression_2','parser.py',1149),
  ('term -> factor','term',1,'p_term_1','parser.py',1155),
  ('term -> term mulop factor','term',3,'p_term_2','parser.py',1160),
  ('factor -> sign factor','factor',2,'p_factor_1','parser.py',1166),
  ('factor -> primary','factor',1,'p_factor_2','parser.py',1172),
  ('primary -> variable_access','primary',1,'p_primary_1','parser.py',1177),
  ('primary -> unsigned_constant','primary',1,'p_primary_2','parser.py',1183),
  ('primary -> function_designator','primary',1,'p_primary_3','parser.py',1188),
  ('primary -> set_constructor','primary',1,'p_primary_4','parser.py',1193),
  ('primary -> LPAREN expression RPAREN','primary',3,'p_primary_5','parser.py',1198),
  ('primary -> NOT primary','primary',2,'p_primary_6','parser.py',1203),
  ('unsigned_constant -> unsigned_number','unsigned_constant',1,'p_unsigned_constant_1','parser.py',1209),
  ('unsigned_constant -> STRING','unsigned_constant',1,'p_unsigned_constant_2','parser.py',1214),
  ('unsigned_constant -> NIL','unsigned_constant',1,'p_unsigned_constant_3','parser.py',1220),
  ('unsigned_constant -> CHAR','unsigned_constant',1,'p_unsigned_constant_4','parser.py',1226),
  ('unsigned_number -> unsigned_integer','unsigned_number',1,'p_unsigned_number_1','parser.py',1232),
  ('unsigned_number -> unsigned_real','unsigned_number',1,'p_unsigned_number_2','parser.py',1237),
  ('unsigned_integer -> DIGSEQ','unsigned_integer',1,'p_unsigned_integer_1','parser.py',1242),
  ('unsigned_integer -> HEXDIGSEQ','unsigned_integer',1,'p_unsigned_integer_2','parser.py',1248),
  ('unsigned_integer -> OCTDIGSEQ','unsigned_integer',1,'p_unsigned_integer_3','parser.py',1254),
  ('unsigned_integer -> BINDIGSEQ','unsigned_integer',1,'p_unsigned_integer_4','parser.py',1260),
  ('unsigned_real -> REALNUMBER','unsigned_real',1,'p_unsigned_real_1','parser.py',1266),
  ('function_designator -> identifier params','function_designator',2,'p_function_designator_1','parser.py',1272),
  ('set_constructor -> LBRAC member_designator_list RBRAC','set_constructor',3,'p_set_constructor_1','parser.py',1278),
  ('set_constructor -> LBRAC RBRAC','set_constructor',2,'p_set_constructor_2','parser.py',1284),
  ('member_designator_list -> member_designator_list comma member_designator','member_designator_list',3,'p_member_designator_list_1','parser.py',1291),
  ('member_designator_list -> member_designator','member_designator_list',1,'p_member_designator_list_2','parser.py',1298),
  ('member_designator -> member_designator DOTDOT expression','member_designator',3,'p_member_designator_1','parser.py',1304),
  ('member_designator -> expression','member_designator',1,'p_member_designator_2','parser.py',1310),
  ('addop -> PLUS','addop',1,'p_addop_1','parser.py',1315),
  ('addop -> MINUS','addop',1,'p_addop_2','parser.py',1321),
  ('addop -> OR','addop',1,'p_addop_3','parser.py',1327),
  ('mulop -> STAR','mulop',1,'p_mulop_1','parser.py',1333),
  ('mulop -> SLASH','mulop',1,'p_mulop_2','parser.py',1339),
  ('mulop -> DIV','mulop',1,'p_mulop_3','parser.py',1345),
  ('mulop -> MOD','mulop',1,'p_mulop_4','parser.py',1351),
  ('mulop -> AND','mulop',1,'p_mulop_5','parser.py',1357),
  ('relop -> EQUAL','relop',1,'p_relop_1','parser.py',1363),
  ('relop -> NOTEQUAL','relop',1,'p_relop_2','parser.py',1369),
  ('relop -> LT','relop',1,'p_relop_3','parser.py',1375),
  ('relop -> GT','relop',1,'p_relop_4','parser.py',1381),
  ('relop -> LE','relop',1,'p_relop_5','parser.py',1387),
  ('relop -> GE','relop',1,'p_relop_6','parser.py',1393),
  ('relop -> IN','relop',1,'p_relop_7','parser.py',1399),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier_1','parser.py',1405),
  ('semicolon -> SEMICOLON','semicolon',1,'p_semicolon_1','parser.py',1411),
  ('comma -> COMMA','comma',1,'p_comma_1','parser.py',1416),
  ('empty -> <empty>','empty',0,'p_empty_1','parser.py',1429),
]
